import logging
import os
import pprint

pi_os_special_vars = {
    'SUPERUSER_REALM': os.getenv("SUPERUSER_REALM","admin,helpdesk").split(','),
    'PI_ENCFILE' : '/privacyidea/etc/persistent/enckey',
    'PI_SCRIPT_HANDLER_DIRECTORY' : '/privacyidea/scripts',
    'PI_AUDIT_KEY_PRIVATE' : '/privacyidea/etc/persistent/private.pem',
    'PI_AUDIT_KEY_PUBLIC' : '/privacyidea/etc/persistent/public.pem',
    'PI_AUDIT_SQL_TRUNCATE' : os.getenv("PI_AUDIT_SQL_TRUNCATE",True),
    'PI_ENGINE_REGISTRY_CLASS': os.getenv("PI_REGISTRY_CLASS", "shared"),
    'PI_AUDIT_POOL_SIZE' : os.getenv("PI_AUDIT_POOL_SIZE", "20"),
    'PI_AUDIT_NO_SIGN' : os.getenv("PI_AUDIT_POOL_SIZE", False),
    'PI_LOGCONFIG' : '/privacyidea/etc/logging.cfg',
    'PI_LOGLEVEL' : logging.getLevelName(os.getenv("PI_LOGLEVEL", "INFO").upper()),
    'PI_UUID_FILE' : '/privacyidea/etc/persistent/uuid.txt',
    'PI_SQLALCHEMY_ENGINE_OPTIONS' : {"pool_pre_ping": os.getenv("PI_SQLALCHEMY_ENGINE_OPTIONS", "False")} ,
    'SQLALCHEMY_DATABASE_URI' : os.getenv("DB_API",'sqlite:////privacyidea/etc/persistent/data.sqlite') + "://" + os.getenv("DB_USER",'') + ":" + os.getenv("DB_PASSWORD",'') + "@" + os.getenv("DB_HOST",'') + ":" + os.getenv("DB_PORT",'') + "/" + os.getenv("DB_NAME",'') + os.getenv("DB_EXTRA_PARAMS",'')
    }

pi_os_vars = {key: value for key, value in os.environ.items() if key.startswith('PI_')}    

for k, v in pi_os_vars.items():
        locals()[k] = v

for k, v in pi_os_special_vars.items():
        locals()[k] = v

debugenv = locals().copy()
pprint.pprint (debugenv)
